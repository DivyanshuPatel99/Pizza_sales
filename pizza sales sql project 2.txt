Basic;

1). Retrieve the total number of orders placed.
select count(*) 
from Orders

2).Calculate the total revenue generated from pizza sales.
SELECT 
    ROUND(SUM(orders_details.quantity * pizzas.price),
            2) AS total_sales
FROM
    pizzas
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id

3).Identify the highest-priced pizza.
SELECT 
    pizza_types.name, pizzas.price
FROM
    pizzas
        JOIN
    pizza_types ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
Limit 1;

4).Identify the most common pizza size ordered.
SELECT 
    pizzas.size,
    COUNT(orders_details.order_details_id) AS order_count
FROM
    pizzas
        JOIN
    orders_details ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY size
ORDER BY order_count DESC

5).List the top 5 most ordered pizza types along with their quantities.
SELECT 
    pizza_types.name,
    SUM(orders_details.quantity) AS total_pizzas
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY total_pizzas DESC
LIMIT 5

Intermediate:

1).Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT 
    pizza_types.category,
    SUM(orders_details.quantity) AS total_pizzas
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY total_pizzas DESC

2).Determine the distribution of orders by hour of the day.
SELECT 
    HOUR(order_time), COUNT(order_id)
FROM
    orders
GROUP BY HOUR(order_time)

3).Join relevant tables to find the category-wise distribution of pizzas.
SELECT 
    pizza_types.category,
    COUNT(pizza_types.category) no_of_pizzas
FROM
    pizza_types
GROUP BY pizza_types.category
ORDER BY no_of_pizzas DESC

4).Group the orders by date and calculate the average number of pizzas ordered per day
SELECT 
    AVG(avg_pizzas)
FROM
    (SELECT 
        orders.order_date,
            SUM(orders_details.quantity) AS avg_pizzas
    FROM
        orders
    JOIN orders_details ON orders.order_id = orders_details.order_id
    GROUP BY orders.order_date) AS order_quantity

5).Determine the top 3 most ordered pizza types based on revenue.
SELECT 
    pizza_types.name,
    sum(orders_details.quantity * pizzas.price)
FROM
    pizza_types
        JOIN
    pizzas ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY sum(orders_details.quantity * pizzas.price) DESC
LIMIT 3

Advanced:

1).Calculate the percentage contribution of each pizza type to total revenue.
SELECT 
    pizza_types.category,
    ROUND((SUM(orders_details.quantity * pizzas.price) / (SELECT 
                    ROUND(SUM(orders_details.quantity * pizzas.price),
                                2) AS total_sales
                FROM
                    pizzas
                        JOIN
                    orders_details ON orders_details.pizza_id = pizzas.pizza_id)) * 100,
            2) AS revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY revenue DESC

2).Analyze the cumulative revenue generated over time.
select order_date,
sum(revenue) over(order by order_date) as cum_revenue
from
(SELECT 
    orders.order_date,
    SUM(orders_details.quantity * pizzas.price) AS revenue
FROM
    orders
        JOIN
    orders_details ON orders_details.order_id = orders.order_id
        JOIN
    pizzas ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY orders.order_date) as sales ;

3).Determine the top 3 most ordered pizza types based on revenue for each pizza category.
select name,revenue from
(select name,category,revenue,
rank() over(partition by category order by revenue desc) as rn
from
(select pizza_types.name, pizza_types.category, sum(orders_details.quantity*pizzas.price) as revenue
from pizza_types 
join pizzas on pizzas.pizza_type_id = pizza_types.pizza_type_id
join orders_details 
on orders_details.pizza_id = pizzas.pizza_id
group by pizza_types.category,pizza_types.name) as a) as b
where rn <=3
























